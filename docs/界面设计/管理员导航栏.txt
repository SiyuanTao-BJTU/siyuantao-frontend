【思源淘】管理员后台导航栏设计与实现指导
我们将采纳你提出的想法，并将其细化，以实现一个结构清晰、灵活且易于维护的管理员后台布局。

1. AdminLayout.vue 的结构
我强烈推荐使用 Element Plus 的 el-container, el-header, el-aside, el-main 布局组件 来构建 AdminLayout.vue。这种结构非常适合管理后台的经典布局，并且提供了很好的语义化和响应式能力。

AdminLayout.vue 骨架：

Code snippet

<template>
  <el-container class="admin-layout-container">
    <el-header class="admin-header">
      <div class="header-left">
        <img src="@/assets/logo.png" alt="思源淘 Logo" class="admin-logo" />
        <span class="admin-title">思源淘 管理后台</span>
      </div>
      <div class="header-right">
        <span class="admin-info">当前权限：{{ currentAdminRole }}</span>
        <el-dropdown trigger="click" @command="handleCommand">
          <span class="el-dropdown-link admin-user-name">
            {{ adminUserName }}<i class="el-icon-arrow-down el-icon--right"></i>
          </span>
          <template #dropdown>
            <el-dropdown-menu>
              <el-dropdown-item command="logout">退出登录</el-dropdown-item>
            </el-dropdown-menu>
          </template>
        </el-dropdown>
      </div>
    </el-header>

    <el-container class="admin-content-wrapper">
      <el-aside width="200px" class="admin-aside">
        <el-menu
          :default-active="activeMenu"
          class="el-menu-vertical-demo"
          router
          :collapse="isCollapse" // 可选：控制侧边栏折叠
          background-color="#304156" // 示例背景色
          text-color="#bfcbd9" // 示例文字色
          active-text-color="#4A90E2" // 示例选中文字色 (蓝色)
        >
          <template v-for="menuItem in filteredAdminMenus" :key="menuItem.path">
            <el-menu-item :index="menuItem.path">
              <i :class="menuItem.icon"></i>
              <span>{{ menuItem.title }}</span>
            </el-menu-item>
          </template>
        </el-menu>
      </el-aside>

      <el-main class="admin-main-content">
        <router-view /> </el-main>
    </el-container>
  </el-container>
</template>

<script>
import { defineComponent, computed } from 'vue';
import { useStore } from 'vuex';
import { useRouter, useRoute } from 'vue-router';
import { ElMessage } from 'element-plus'; // 假设你使用 Element Plus 的消息提示

export default defineComponent({
  name: 'AdminLayout',
  setup() {
    const store = useStore();
    const router = useRouter();
    const route = useRoute();

    // 从 Vuex 获取管理员信息和权限
    const adminUserName = computed(() => store.getters.userInfo.username || '管理员'); // 假设用户名存在 userInfo 里
    const currentAdminRole = computed(() => store.getters.isAdmin ? '超级管理员' : '普通管理员'); // 假设 isAdmin 判断角色
    const isAdmin = computed(() => store.getters.isAdmin); // 判断是否为超级管理员

    // 控制侧边栏选中状态
    const activeMenu = computed(() => route.path);

    // 侧边栏菜单数据源
    const adminMenus = [
      { path: '/admin/dashboard', title: '仪表盘概览', icon: 'el-icon-odometer', roles: ['admin', 'super_admin'] },
      { path: '/admin/users', title: '用户管理', icon: 'el-icon-user', roles: ['admin', 'super_admin'] },
      { path: '/admin/products-audit', title: '商品审核', icon: 'el-icon-box', roles: ['admin', 'super_admin'] },
      { path: '/admin/returns', title: '退货申请管理', icon: 'el-icon-refresh-left', roles: ['admin', 'super_admin'] },
      { path: '/admin/reports', title: '举报管理', icon: 'el-icon-warning-outline', roles: ['admin', 'super_admin'] },
      { path: '/admin/notifications', title: '系统通知发送', icon: 'el-icon-bell', roles: ['admin', 'super_admin'] },
      { path: '/admin/permissions', title: '权限管理', icon: 'el-icon-setting', roles: ['super_admin'] }, // 仅超级管理员可见
    ];

    // 根据权限过滤菜单项
    const filteredAdminMenus = computed(() => {
      // 假设 store.getters.isAdmin 为 true 表示超级管理员，否则为普通管理员
      const userRole = isAdmin.value ? 'super_admin' : 'admin';
      return adminMenus.filter(item => item.roles.includes(userRole));
    });

    // 处理顶部下拉菜单命令
    const handleCommand = (command) => {
      if (command === 'logout') {
        store.dispatch('logout'); // 调用 Vuex 的 logout action
        ElMessage.success('已退出登录');
      }
    };

    // 可选：侧边栏折叠功能
    const isCollapse = ref(false); // 初始为展开
    const toggleCollapse = () => {
      isCollapse.value = !isCollapse.value;
    };

    return {
      adminUserName,
      currentAdminRole,
      activeMenu,
      filteredAdminMenus,
      handleCommand,
      isCollapse,
      toggleCollapse
    };
  },
});
</script>

<style scoped>
.admin-layout-container {
  height: 100vh;
}

/* Header 样式 */
.admin-header {
  background-color: #ffffff; /* 白色背景 */
  color: #333;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid #e6e6e6; /* 底部细线 */
  height: 60px; /* 固定高度 */
  padding: 0 20px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08); /* 轻微阴影 */
}

.header-left {
  display: flex;
  align-items: center;
}

.admin-logo {
  height: 32px; /* 调整 Logo 大小 */
  margin-right: 10px;
}

.admin-title {
  font-size: 20px;
  font-weight: bold;
  color: #4A90E2; /* 蓝色网站名称 */
}

.header-right {
  display: flex;
  align-items: center;
}

.admin-info {
  margin-right: 20px;
  font-size: 14px;
  color: #666;
}

.admin-user-name {
  cursor: pointer;
  color: #4A90E2; /* 蓝色用户名称 */
  font-weight: bold;
}

/* Aside 侧边导航样式 */
.admin-content-wrapper {
  flex: 1; /* 让内容区域填充剩余空间 */
}

.admin-aside {
  background-color: #304156; /* 深色侧边栏背景，可根据品牌调性调整 */
  overflow-x: hidden; /* 防止溢出滚动条 */
}

.el-menu-vertical-demo:not(.el-menu--collapse) {
  width: 200px;
  min-height: 400px;
}

.el-menu-vertical-demo {
  border-right: none; /* 移除右侧边框 */
}

.el-menu-item {
  color: #bfcbd9 !important; /* 默认文字颜色 */
}

.el-menu-item.is-active {
  background-color: #4A90E2 !important; /* 选中项背景色为蓝色 */
  color: #ffffff !important; /* 选中项文字为白色 */
}

.el-menu-item:hover {
  background-color: #4A90E250 !important; /* 悬停效果，稍透明的蓝色 */
}

/* Main 内容区域样式 */
.admin-main-content {
  background-color: #f0f2f5; /* 浅灰色内容背景 */
  padding: 20px;
  overflow-y: auto; /* 允许内容区域滚动 */
}
</style>
代码解释：

el-container 嵌套： 最外层 el-container 用于整体布局，内部再嵌套一个 el-container 用于侧边栏和主内容区域。
el-header： 顶部导航栏，分为左右两部分。左侧 Logo 和网站名称，右侧管理员信息和退出下拉菜单。
el-aside： 侧边导航栏。使用了 el-menu 组件。
default-active: 绑定 activeMenu Computed 属性，根据当前路由路径高亮菜单项。
router: 设置此属性后，el-menu-item 的 index 会被当作 router-link 的 to 属性。
background-color, text-color, active-text-color: 调整菜单颜色以符合你的深色侧边栏需求和品牌蓝色强调色。
isCollapse: 可以实现侧边栏的折叠/展开功能（需要添加一个切换按钮）。
el-main： 主要内容区域，router-view 将在这里渲染具体的管理页面组件。
adminMenus 数据源： 硬编码了一个数组 adminMenus，每个对象包含 path (路由路径), title (菜单显示文本), icon (Element Plus 图标类名), roles (权限列表)。
filteredAdminMenus Computed 属性： 这是实现侧边导航权限控制的关键。它会根据当前用户的角色 (isAdmin 状态) 过滤 adminMenus，只显示用户有权限访问的菜单项。
handleCommand： 处理顶部退出登录下拉菜单的点击事件。
2. 侧边导航菜单的数据源
如上面代码所示，我们采用了从一个配置数组中生成菜单项的方式。

优点：

灵活易维护： 增加、删除、修改菜单项，或者调整菜单顺序，只需要修改这个数组即可，不需要改动组件的模板结构。
权限控制方便： 可以在遍历数组时根据每个菜单项的 roles 属性进行过滤。
3. 侧边导航的权限控制
我们选择的方案是：在组件内部通过 v-if 或 computed 属性（如 filteredAdminMenus）来控制菜单项的显示，同时结合路由守卫 beforeEach 来控制路由的访问权限。

具体实现：

filteredAdminMenus (组件内部显示控制):

在 AdminLayout.vue 的 script 部分，我们定义了 adminMenus 数组，每个菜单项都有一个 roles 属性。
filteredAdminMenus Computed 属性会根据当前用户的实际角色 (isAdmin，来自 Vuex) 过滤出用户有权限查看的菜单项。
template 中遍历 filteredAdminMenus 来渲染 el-menu-item，确保用户看不到他们无权访问的菜单。
路由守卫 beforeEach (路由访问权限控制):

这是更严格的权限控制。即使通过前端隐藏了菜单，用户也可能通过直接输入 URL 来访问。路由守卫会在每次路由跳转前进行检查。
你需要修改 src/router/index.js 中的 beforeEach 守卫，来判断用户是否有权访问某个管理员路由。
JavaScript

// src/router/index.js (修改 beforeEach 守卫)

router.beforeEach(async (to, from, next) => {
    const isLoggedIn = store.getters.isLoggedIn;
    const isAdmin = store.getters.isAdmin; // 获取管理员状态

    // 检查前台页面需要登录
    if (to.meta.requiresAuth && !isLoggedIn) {
        ElMessage.warning('请先登录'); // Element Plus 消息提示
        return next('/login');
    }

    // 检查管理员后台页面权限
    if (to.matched.some(record => record.meta.requiresAdmin)) { // 假设管理员路由有 requiresAdmin: true
        if (!isLoggedIn) {
            ElMessage.warning('请先登录管理员账号');
            return next('/admin/login'); // 重定向到管理员登录
        }
        if (!isAdmin && to.meta.requiresSuperAdmin) { // 如果是普通管理员但需要超级管理员权限
            ElMessage.error('您没有权限访问此页面');
            return next('/admin/dashboard'); // 重定向到仪表盘或其他默认管理员页面
        }
        // 如果是普通管理员且访问的是普通管理员可访问的页面，则允许
        // 如果是超级管理员，则允许访问所有管理员页面
    }
    next(); // 允许访问
});
需要在路由定义中为管理员页面添加 meta.requiresAdmin 和 meta.requiresSuperAdmin (如果需要更细粒度权限)。
4. Admin 模块的路由
管理员后台的所有子路由将作为 AdminLayout.vue 的子路由定义。

src/router/index.js (路由定义示例):

JavaScript

// src/router/index.js

import AdminLayout from '@/admin/layouts/AdminLayout.vue'; // 引入 AdminLayout

const routes = [
    // ... 前台用户路由
    {
        path: '/admin/login',
        component: () => import('@/admin/views/AuthView.vue'), // 管理员登录页
        meta: { hideNavbar: true } // 隐藏前台导航栏
    },
    {
        path: '/admin',
        component: AdminLayout, // 管理员后台的主布局组件
        redirect: '/admin/dashboard', // 访问 /admin 默认跳转到仪表盘
        meta: { requiresAdmin: true }, // 要求管理员权限才能访问这个大路由
        children: [
            {
                path: 'dashboard',
                name: 'AdminDashboard',
                component: () => import('@/admin/views/DashboardView.vue'),
                meta: { title: '仪表盘概览' } // 可选：用于面包屑或页面标题
            },
            {
                path: 'users',
                name: 'AdminUserManagement',
                component: () => import('@/admin/views/UserManagementView.vue'),
                meta: { title: '用户管理' }
            },
            {
                path: 'products-audit',
                name: 'AdminProductAudit',
                component: () => import('@/admin/views/ProductAuditView.vue'),
                meta: { title: '商品审核' }
            },
            {
                path: 'returns',
                name: 'AdminReturnManagement',
                component: () => import('@/admin/views/ReturnManagementView.vue'),
                meta: { title: '退货申请管理' }
            },
            {
                path: 'reports',
                name: 'AdminReportManagement',
                component: () => import('@/admin/views/ReportManagementView.vue'),
                meta: { title: '举报管理' }
            },
            {
                path: 'notifications',
                name: 'AdminNotificationSend',
                component: () => import('@/admin/views/NotificationSendView.vue'),
                meta: { title: '系统通知发送' }
            },
            {
                path: 'permissions',
                name: 'AdminPermissionManagement',
                component: () => import('@/admin/views/PermissionManagementView.vue'),
                meta: { requiresSuperAdmin: true, title: '权限管理' } // 仅超级管理员可访问
            },
            // ... 其他管理员后台的子路由
        ]
    },
    // ... 404 路由
];
项目结构建议：

src/admin/layouts/AdminLayout.vue: 放置管理员后台的整体布局组件。
src/admin/views/: 放置所有具体的管理员后台页面组件（如 DashboardView.vue, UserManagementView.vue 等）。
src/admin/components/: 放置管理员后台专用的可复用组件。